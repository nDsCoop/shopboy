{"ast":null,"code":"import axios from 'axios';\nimport Axios from 'axios';\n\nconst {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_SAVE_REQUEST,\n  PRODUCT_SAVE_SUCCESS,\n  PRODUCT_SAVE_FAIL\n} = require(\"../constants/productConstants\");\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct };","map":{"version":3,"sources":["C:/Users/Administrator.MUL2DK8Y26XNUQY/repos/seoWeb/frontend/src/actions/productActions.js"],"names":["axios","Axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","require","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Axios from 'axios';\r\nconst { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n     PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL\r\n      } = require(\"../constants/productConstants\");\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n    try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const {data} = await axios.get(\"/api/products/\");\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data});\r\n    } catch (error) {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message});\r\n    }\r\n}\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product});\r\n        const {userSignin: { userInfo }} = getState();\r\n        if(product._id) {\r\n            const { data } = await Axios.post('/api/products', product, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n        } else {\r\n            const { data } = await Axios.put('/api/products/' + product._id , product, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + userInfo.token\r\n                }\r\n            });\r\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n        }\r\n            \r\n    }\r\n     catch (error){\r\n        dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n    }\r\n}\r\nconst  detailsProduct  = (productId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n        const {data} = await axios.get(\"/api/products/\" + productId);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n        } catch (error) {\r\n            dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n        }\r\n}\r\nexport { listProducts, detailsProduct, saveProduct }\r\n"]},"metadata":{},"sourceType":"module"}