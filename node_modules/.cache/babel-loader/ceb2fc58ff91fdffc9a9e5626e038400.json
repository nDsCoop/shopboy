{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nconst {\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNIN_FAIL\n} = require(\"../constants/userContants\");\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/tutorials/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.massage\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/tutorials/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.massage\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["C:/Users/Administrator.MUL2DK8Y26XNUQY/repos/seoWeb/frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","require","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","massage","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAM;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA,mBAAvB;AAA4CC,EAAAA;AAA5C,IAAiEC,OAAO,CAAC,2BAAD,CAA9E;;AAGA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,mBAAR;AAA6BS,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,uBAAX,EAAoC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAApC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,gBAAR;AAA0BO,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AAEJ,CAVD;;AAWA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC5DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEW,qBAAR;AAA+BV,IAAAA,OAAO,EAAE;AAAES,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf;AAAxC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,yBAAX,EAAsC;AAAEO,MAAAA,IAAF;AAAQb,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAtC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEY,qBAAR;AAA+BX,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEa,kBAAR;AAA4BZ,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA3C,KAAD,CAAR;AACH;AAEJ,CAVD;;AAWA,SAASZ,MAAT,EAAiBa,QAAjB","sourcesContent":["import Axios from \"axios\";\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL } = require(\"../constants/userContants\");\r\n\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/tutorials/signin', { email, password });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_SIGNIN_FAIL, payload: error.massage });\r\n    }\r\n    \r\n} \r\nconst register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/tutorials/register', { name, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_REGISTER_FAIL, payload: error.massage });\r\n    }\r\n    \r\n} \r\nexport { signin, register };"]},"metadata":{},"sourceType":"module"}